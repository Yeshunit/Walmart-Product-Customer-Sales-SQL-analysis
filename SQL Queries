CREATE DATABASE walmart;
USE walmart;

-- Create table
CREATE TABLE IF NOT EXISTS sales(
	invoice_id VARCHAR(30) NOT NULL PRIMARY KEY,
    branch VARCHAR(5) NOT NULL,
    city VARCHAR(30) NOT NULL,
    customer_type VARCHAR(30) NOT NULL,
    gender VARCHAR(30) NOT NULL,
    product_line VARCHAR(100) NOT NULL,
    unit_price DECIMAL(10,2) NOT NULL,
    quantity INT NOT NULL,
    tax_pct FLOAT(6,4) NOT NULL,
    total DECIMAL(12, 4) NOT NULL,
    date DATETIME NOT NULL,
    time TIME NOT NULL,
    payment VARCHAR(15) NOT NULL,
    cogs DECIMAL(10,2) NOT NULL,
    gross_margin_pct FLOAT(11,9),
    gross_income DECIMAL(12, 4),
    rating FLOAT(2, 1)
);


--  Fetching time and executing on the basis of MOrning,Afternoon,Evening
-- Data Cleaning

SELECT 
    time,
    (CASE
        WHEN time BETWEEN '00:00:00' AND '12:00:00' THEN 'MORNING'
        WHEN time BETWEEN '12:01:00' AND '16:00:00' THEN 'AFTERNOON'
        ELSE 'Evening'
    END) AS time_of_date
FROM
    walmartsales;

ALTER TABLE walmartsales ADD COLUMN time_of_date VARCHAR(50);

UPDATE walmartsales 
SET 
    time_of_date = (CASE
        WHEN time BETWEEN '00:00:00' AND '12:00:00' THEN 'MORNING'
        WHEN time BETWEEN '12:01:00' AND '16:00:00' THEN 'AFTERNOON'
        ELSE 'Evening'
    END);

SELECT 
    *
FROM
    walmartsales;
-- ----------------------------------------------------------------------- 
SELECT 
    date, DAYNAME(date) AS day_name
FROM
    walmartsales;

alter table walmartsales add column day_name varchar(10);

UPDATE walmartsales 
SET 
    day_name = DAYNAME(date);

-- ---------------------------------------------------------------------
SELECT 
    date, MONTHNAME(date) AS month_name
FROM
    walmartsales;

alter table walmartsales add column month_name varchar(10);

UPDATE walmartsales 
SET 
    month_name = MONTHNAME(date);
    
SELECT 
    *
FROM
    walmartsales;
    
-------------------------------------------------------------------------------------------------------------

-- Generic Questions--

-- 1.How many unique cities does the data have?
SELECT DISTINCT
    city
FROM
    walmartsales;
-- 2.In which city is each branch?
SELECT DISTINCT
    city, branch
FROM
    walmartsales;
---------------------------------------------------------------------------------------------------------------------------
-- Product Questions -- 

-- 1. How many unique product lines does the data have?
SELECT DISTINCT product_line
FROM walmartsales;

-- 2.What is the most common payment method?
SELECT payment_methods, COUNT(Payment_methods) AS max_payment
FROM walmartsales
GROUP BY Payment_methods;
-- 3. What is the most selling product line?
SELECT 
    Product_line, COUNT(product_line) AS cnt
FROM walmartsales
GROUP BY product_line
ORDER BY cnt DESC;

-- 4.What is the total revenue by month?
SELECT month_name, SUM(total) AS monthsale
FROM walmartsales
GROUP BY month_name
ORDER BY monthsale DESC;

-- 5.What month had the largest COGS?
SELECT month_name, SUM(cogs) AS maxcogs
FROM walmartsales
GROUP BY month_name
ORDER BY maxcogs DESC;

-- 6.What product line had the largest revenue?
SELECT product_line, SUM(total) AS maxrevenue
FROM walmartsales
GROUP BY product_line
ORDER BY maxrevenue DESC;

-- 7. What is the city with the largest revenue?
SELECT city, branch, SUM(total) AS cityrevenue
FROM walmartsales
GROUP BY city , branch
ORDER BY cityrevenue DESC;

-- 8. What product line had the largest VAT?
SELECT product_line, ROUND(SUM(vat), 2) AS largestVAT
FROM walmartsales
GROUP BY product_line
ORDER BY largestVAT DESC;

-- 9.Fetch each product line those product line showing "Good", "Bad". 
-- Good if its greater than average sales.
SELECT product_line,
	CASE
		WHEN sum(quantity) > avg(Quantity) THEN "Good" ELSE "Bad"
    END AS remark
FROM walmartsales
GROUP BY product_line;

-- 10. Which branch sold more products than average product sold?
SELECT branch, SUM(quantity) AS qty
FROM walmartsales
GROUP BY branch
HAVING qty > AVG(quantity);

-- 11.What is the most common product line by gender?
WITH ranked_sales AS (
    SELECT gender, product_line, COUNT(gender) AS total_count,
           RANK() OVER (PARTITION BY product_line ORDER BY COUNT(gender) DESC) AS rn
    FROM walmartsales
    GROUP BY gender, product_line
)
SELECT gender, product_line, total_count
FROM ranked_sales
WHERE rn = 1;

-- 12.What is the average rating of each product line?
select product_line,round(avg(rating),2) as avg_rating
from walmartsales
group by product_line
order by avg_rating;

--------------------------------------------------------------------------------------------------------------------------------------------
-- Sales questions -- 
-- 1.Number of sales made in each time of the day per weekday
SELECT time_of_day, COUNT(*) AS total_sales
FROM walmartsales
WHERE day_name = 'Monday'
GROUP BY time_of_day;

-- 2.Which of the customer types brings the most revenue?
SELECT customer_type, SUM(total) AS max_revenue
FROM walmartsales
GROUP BY customer_type ORDER BY max_revenue DESC;


-- 3.Which city has the largest tax percent/VAT (value added Tax)?
SELECT city, ROUND(AVG(VAT), 2) AS VAT
FROM walmartsales
GROUP BY city ORDER BY vat DESC;

-- 4. Which customer type pays the most in VAT?
SELECT customer_type, ROUND(SUM(vat),2) AS total_vat
FROM walmartsales
GROUP BY customer_type ORDER BY total_vat DESC;

---------------------------------------------------------------------------------------------------------------------------
-- Customer Questions--

-- 1. How many unique customer types does the data have?
select distinct customer_type
from walmartsales;



-- 2.How many unique payment methods does the data have?
SELECT distinct payment_methods
from walmartsales;

-- 3.What is the most common customer type?
select customer_type, count(customer_type) as commontype
from walmartsales
group by customer_type
order by commontype desc;

-- 4.Which customer type spemd the most?
select customer_type,sum(total) as most_purchase 
from walmartsales
group by customer_type
order by most_purchase desc;

-- 5.which  is the gender of most of the customers?
select gender,count(*) as most_gender 
from walmartsales
group by gender 
order by most_gender desc;

-- 6. What is the gender distribution per branch?
select branch,gender,count(*) as gender_distribution
from walmartsales
group by branch,gender
order by branch;
-- 7.Which time of the day do customers give most ratings?
select count(rating) as most_rating,time_of_day
from walmartsales
group by time_of_day
order by most_rating desc;
-- 8. Which time of the day do customers give most ratings per branch?
select time_of_day,branch,count(rating) as most_rating_per_branch
from walmartsales
group by branch,time_of_day
order by most_rating_per_branch desc;

-- 9. Which day of the week has the best average ratings per branch?
select time_of_day,
round(avg(rating),2) as avg_rating
from walmartsales
group by time_of_day
order by avg(rating) desc
limit 1;

-- 10.Which day of the week has the best average ratings per branch?
select branch,day_name,round(avg(rating),2) as rating
from walmartsales
group by branch,day_name
order by rating desc
limit 1;







